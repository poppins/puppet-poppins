;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; THIS FILE IS INSTALLED WITH PUPPET 
; ANY CHANGES WILL BE OVERWRITTEN
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; INTRODUCTION 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; ini file options may be overridden at the cli
; e.g. poppins -c example.ini --remote-host=localhost
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; LOCAL 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[local]
; root dir (parent dir for backups)
; use an absolute path
; e.g. rootdir = /backups 
; rootdir = "/backups/hosts"
rootdir = "<%= @rootdir %>"
; each backup log will be written to this directory
; you may use a directory per host or one for all hosts
; the poppins application log (poppins.log) will also log here
; use an absolute path
; e.g. logdir = "/root/poppins/logs";
logdir = "<%= @logdir %>"
; override hostdir name used to store backup
; default is value specified by host in [remote] section
; leave empty if default is required
hostdir-name = '<%= @hostdir_name %>'
; create a host dir if not exists (yes or no)
; useful when script is ran for the first time
hostdir-create = yes
; local filesystem options: default/ZFS/BTRFS
; use ZFS or BTRFS if you want to use shapshot features
; for these filesystems. Otherwise, use default.
snapshot-backend = 'zfs'
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; REMOTE 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[remote]
; IP or resolvable host name. This variable may be overriden on the cli
; as any parameter in this config file. For example, you may use this ini file as 
; a template, e.g. poppins --remote-host=webserver1 -c webservers.poppins.ini
host = '<%= @remote_host %>'
; Remote user, usually root. If not specified, same user who executes poppins is assumed.
user = '<%= @remote_user %>'
; remote script ran before backup
; e.g. pre-backup-script = "/home/poppins/some-pre-backup-script.sh";
pre-backup-script = "<%= @pre_backup_script %>";
; if the remote job fails, abort or continue with poppins backups
; values are "abort" or "continue"
pre-backup-onfail = "<%= @pre_backup_onfail %>";
; enable remote connection with ssh, default is yes
; disable if backing up local directories (e.g. to an external drive)
; host and user directives are disregarded in case ssh is disabled
ssh = yes
; ssh connection retries if desired
; check is applied on first connection attempt only
; default is 0
retry-count = 0
; timeout between retries in seconds
; default is 0
retry-timeout = 10
; if the backup job fails, abort or continue with the post-backup script
; values are "abort" or "continue"
backup-onfail = "<%= @backup_onfail %>";
; remote script ran after backup
; e.g. post-backup-script = "/home/poppins/some-post-backup-script.sh";
post-backup-script = "<%= @post_backup_script %>";
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; INCLUDED DIRECTORIES
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; create a directory per partition you want to back up, 
; rsync won't traverse file system limits (rsync -x)
; format: source (remote) = target (local)
; may be left empty, if only MySQL is needed
[included]
<% if @included.is_a? Hash %>
<% @included.each do |path, dir| %><%= "#{path} = '#{dir}'\n" %><% end %>
<% else %> 
    <%= fail("included is geen hash in #{hostdir_name}!") %>
<% end %>
; /foo = 'bar'
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; EXCLUDED DIRECTORIES
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; comma seperated list of excluded directories
; values may contain spaces
; use a relative path to the directive! 
; e.g. /var =  "lib/mysql","www"  
[excluded]
<% if @excluded.is_a? Hash %>
<% @excluded.each do |path, dir| %><%= "#{path} = '#{dir}'\n" %><% end %>
<% end %>
; /var =  "lib/mysql"
; / = sys,proc,var,boot
; /home/poppins/contains\ spaces = contains\ other\ spaces
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; SNAPSHOTS
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[snapshots]
<%# if snapshots.is_a? Hash %>
<% @snapshots.each do |snap, freq| %><%= "#{snap} = '#{freq}'\n" %><% end %>
<%# end %> 
; incremental backups to keep
; these backups will be kept until number is reached, in which
; case the oldest backup will be removed.  
;incremental = 4
; periodic snapshots to keep
; syntax: {offset}-{period} = {number of backups to keep}
; first number indicates offset: e.g. 2-weekly will keep a snapshot every 2 weeks
; period may include minutely, hourly, daily, weekly, monthly, yearly
; number of backups to keep = if number is reached, oldest will be deleted
; keep snapshots ervery 2 minutes
; 2-minutely = 3
; keep hourly snapshots
; 1-hourly = 1
; keep daily snapshots
;1-daily = 7
; keep weekly snapshots (7 days)
;1-weekly = 4
; keep snapshots every 2 weeks (14 days)
;2-weekly = 4
; keep monthly snapshots (note: a month is considered a 30 day period)
;1-monthly = 3
; keep snapshots every 6 "months" (note: a month is considered a 30 day period)
;6-monthly = 5
; keep yearly snapshots
;1-yearly = 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; METADATA
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[meta]
; report remote disk layout
<% if @remote_user == 'root' -%>
remote-disk-layout =  yes
<% else -%>
remote-disk-layout =  no
<% end -%>
; report remote package list
remote-package-list =  yes
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; LOG
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[log]
; log total disk usage of backups
local-disk-usage =  no
; gzip host log file
compress = no;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; RSYNC 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[rsync]
; passed straight to rsync. This is for network transfer only. 
compresslevel = 0
; preserve hardlinks, default is no
hardlinks = yes
; verbose rsync, default is no
verbose = yes
; retries if desired
retry-count = 1
; timeout between retries in seconds
retry-timeout = 10
; cross filesystem boundaries
cross-filesystem-boundaries = no
; add timestamps to every line of rsync output
timestamps = <%= @timestamps %>
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; MYSQL
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[mysql]
; MySQL backups, set to yes/no;
enabled = <%= @mysql_enabled %>
; credentials - remote user directories where .my.cnf files are located
; if left empty, home dir is assumed
; multiple directories may be seperated by comma
; e.g. configdirs = '/root,/home/poppins';
<% if @mysql_configdirs %>
configdirs = <%= @mysql_configdirs %>
<% else %>
configdirs = ''
<% end %>
output = 'database,table,csv'
create-database = yes
compress = yes
